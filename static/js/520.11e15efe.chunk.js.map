{"version":3,"file":"static/js/520.11e15efe.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","service/fetchAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Li = styled.li`\n  list-style: none;\n  padding: 15px;\n  margin: 0;\n`;\n\nexport const Links = styled(Link)`\n  text-decoration: none;\n  color: black;\n  :hover {\n    color: red;\n  }\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  text-align: center;\n  width: 200px;\n  height: 355px;\n\n  :hover {\n    scale: 1.1;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { AiOutlineFileImage } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\nimport { List, Li, Links, Card, Img } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <Li key={id}>\n              <Links to={`/movies/${id}`} state={{ from: location }}>\n                <Card>\n                  {poster_path ? (\n                    <Img\n                      src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                      alt={title}\n                    />\n                  ) : (\n                    <AiOutlineFileImage size={200} />\n                  )}\n                  {title}\n                </Card>\n              </Links>\n            </Li>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import styled from \"@emotion/styled\";\n\nexport const TitleText = styled.h2`\n  text-align: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;","import { TitleText } from \"./Title.styled\";\nimport PropTypes from 'prop-types';\n\nconst Title = ({title}) => {\n    return (<><TitleText>{title}</TitleText></>)\n    \n}\n\nTitle.propTypes = {\n    title: PropTypes.string.isRequired,\n  };\n\nexport default Title;\n\n","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  cursor: pointer;\n  color: black;\n  border: 2px solid black;\n  border-radius: 10px;\n  padding: 10px 15px;\n  background: transparent;\n\n  :hover {\n    color: white;\n    box-shadow: 2px 2px 15px #8707ff inset;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  margin-right: 10px;\n  color: black;\n  border: 2px solid black;\n  border-radius: 10px;\n  padding: 10px 25px;\n  background: transparent;\n  max-width: 190px;\n  :hover {\n    box-shadow: 2px 2px 15px #8707ff inset;\n  }\n`;","import { useState } from 'react';\nimport { Form, Input, Button } from './SearchForm.styled';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\n\nconst SearchForm = ({ onSearch }) => {\n  const [query, setQuery] = useState('');\n\n  const changeQuery = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSearch(query);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          placeholder=\"Enter for search movies\"\n          name=\"query\"\n          value={query}\n          onChange={changeQuery}\n        />\n        <Button type=\"submit\">\n          <AiOutlineSearch size=\"15\" />\n        </Button>\n      </Form>\n      \n    </>\n  );\n};\n\nexport default SearchForm;","import SearchForm from 'components/SearchForm/SearchForm'\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'service/fetchAPI';\nimport { useState, useEffect } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Title from 'components/Title/Title';\nimport Loader from 'components/Loader/Loader';\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const moviesName = searchParams.get('query') ?? '';\n\n    const handleOnSubmit = query => {\n        const changeParams = query !== '' ? { query } : {};\n        setSearchParams(changeParams);\n    }\n\n    useEffect(() => {\n        if (!moviesName) return;\n    \n        setLoading(true);\n        fetchSearchMovies(moviesName)\n          .then(({ results }) => {\n            setMovies(results);\n          })\n          .catch(error => setError(error))\n          .finally(() => setLoading(false));\n      }, [moviesName]);\n\n      return (\n        <>\n           <Title title=\"Search for your movie 😎\" />\n          {error && <h2>{error.message}</h2>}\n          <SearchForm value={moviesName} onSearch={handleOnSubmit} />\n          {movies.length > 0 && <MoviesList movies={movies} />}\n          {loading && <Loader />}\n        </>\n      );\n}\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'd51889bf95dcc74c78b947ddbb920e0c';\n\nexport const fetchTrending = async () => {\n  const res = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return res.data;\n};\n\nexport const fetchDetailsMovie = async movieId => {\n    const res = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return res.data;\n  };\n  \n  export const fetchCast = async movieId => {\n    const res = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return res.data;\n  };\n  \n  export const fetchReviews = async movieId => {\n    const res = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return res.data;\n  };\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Li","_templateObject2","Links","Link","_templateObject3","Card","_templateObject4","Img","_templateObject5","_ref","movies","location","useLocation","_jsx","_Fragment","children","map","_ref2","id","title","poster_path","to","concat","state","from","_jsxs","src","alt","AiOutlineFileImage","size","TitleText","Button","Form","Input","onSearch","_useState","useState","_useState2","_slicedToArray","query","setQuery","onSubmit","e","preventDefault","type","placeholder","name","value","onChange","target","toLowerCase","AiOutlineSearch","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","moviesName","get","useEffect","fetchSearchMovies","then","results","catch","finally","Title","message","SearchForm","length","MoviesList","Loader","axios","API_KEY","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","sent","abrupt","data","stop","apply","arguments","_callee2","_context2","_x","fetchDetailsMovie","_ref3","_callee3","movieId","_context3","_x2","fetchCast","_ref4","_callee4","_context4","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}