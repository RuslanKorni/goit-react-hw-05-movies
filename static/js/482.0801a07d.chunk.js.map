{"version":3,"file":"static/js/482.0801a07d.chunk.js","mappings":"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","sources":["components/ButtonBack/ButtonBack.styled.jsx","components/ButtonBack/ButtonBack.jsx","pages/MoviesDetails/MoviesDetails.jsx","service/fetchAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled.button`\ncursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-decoration: none;\n  width: 100px;\n  margin: 10px;\n  padding: 5px;\n  border: none;\n  background: transparent;\n  border-radius: 4px;\n  outline: 2px solid black;\n\n  :hover {\n    color: white;\n    background-color: tomato;\n  }\n`;\n\nexport const LinkBack = styled(Link)`\n  text-decoration: none;\n`;","import { FiArrowLeftCircle } from 'react-icons/fi';\nimport {Button, LinkBack} from './ButtonBack.styled';\n\nconst ButtonBack = ({ to }) => {\n  return (\n    <LinkBack to={to}>\n      <Button>\n        <FiArrowLeftCircle /> Come Back\n      </Button>\n    </LinkBack>\n  );\n};\n\nexport default ButtonBack;","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchDetailsMovie } from 'service/fetchAPI';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\nimport Loader from 'components/Loader/Loader';\n\nconst MoviesDetails = () => {\n  const [moviesDetails, setMoviesDetails] = useState({});\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const buttonBack = useRef(location.state?.from ?? `/`);\n\n  useEffect(() => {\n    fetchDetailsMovie(movieId).then(setMoviesDetails);\n  }, [movieId]);\n\n  const { poster_path, title, genres, overview, vote_average, release_date } =\n    moviesDetails;\n\n  return (\n    <>\n      <ButtonBack to={buttonBack.current} />\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt={title}\n        />\n      </div>\n      <div>\n        {title && (\n          <h2>\n            {title} {release_date.substr(0, 4)}\n          </h2>\n        )}\n\n        <p>User Score: {vote_average && Math.floor(vote_average * 10)}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        {genres && <p>{genres.map(({ name }) => name).join(', ')}</p>}\n      </div>\n      <ul>\n        <h3>Additional information</h3>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'd51889bf95dcc74c78b947ddbb920e0c';\n\nexport const fetchTrending = async () => {\n  const res = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return res.data;\n};\n\nexport const fetchDetailsMovie = async movieId => {\n    const res = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return res.data;\n  };\n  \n  export const fetchCast = async movieId => {\n    const res = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return res.data;\n  };\n  \n  export const fetchReviews = async movieId => {\n    const res = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return res.data;\n  };\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","LinkBack","Link","_templateObject2","_ref","to","_jsx","children","_jsxs","FiArrowLeftCircle","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","moviesDetails","setMoviesDetails","movieId","useParams","location","useLocation","buttonBack","useRef","state","from","useEffect","fetchDetailsMovie","then","poster_path","title","genres","overview","vote_average","release_date","_Fragment","ButtonBack","current","src","concat","alt","substr","Math","floor","map","name","join","Suspense","fallback","Loader","Outlet","axios","API_KEY","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchSearchMovies","_ref2","_callee2","query","_context2","_x","_ref3","_callee3","_context3","_x2","fetchCast","_ref4","_callee4","_context4","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}